name: Build, release, update-infra

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  DOCKER_REPOSITORY: dixneuf19
  DOCKER_TAG: ${{ github.sha}}
  DOCKER_IMAGE_NAME: spotify-api
  TARGET_PLATFORMS: linux/amd64,linux/386,linux/arm64,linux/arm/v7
  INFRA_REPO_URL: "dixneuf19/brassberry-kubernetes-cluster-state"
  INFRA_REPO_PATH: "fip/spotify-api"

jobs:
  build_and_release:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.TARGET_PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with: 
          version: latest # in production, fix the version of your dependencies

      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_REPOSITORY }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build the images
      - name: Build and push docker
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_TAG }}
          platforms: ${{ env.TARGET_PLATFORMS }}
          # cache-from: type=registry,ref=${{ env.DOCKER_REPOSITORY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          # cache-to: type=inline


  update_infra_repo:
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/master'
    needs:
      - build_and_release
    steps:
      - name: Checkout the target repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.INFRA_REPO_URL }}
          token: ${{ secrets.GH_REPO_PAT }}

      - name: Update docker version in Helm config
        uses: microsoft/variable-substitution@v1 
        with:
          files: '${{ env.INFRA_REPO_PATH }}/values.yaml'
        env:
          generic.image.tag: ${{ env.DOCKER_TAG }}

      - name: Push the modification to the repo
        run: |
          git config user.name "Github Actions - $GITHUB_REPOSITORY"
          git config user.email github-actions@github.com
          git add "${{ env.INFRA_REPO_PATH }}/values.yaml"
          git commit -m "chore(${{ env.INFRA_REPO_PATH }}): update to version ${{ env.DOCKER_TAG }}"
          git push
